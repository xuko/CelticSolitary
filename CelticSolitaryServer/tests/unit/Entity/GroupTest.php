<?php // tests/unit/Entity/GroupTest.php

namespace TDW\Test\UserApi\Entity;

use TDW\UserApi\Entity\Group;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-25 at 18:24:39.
 */
class GroupTest extends \PHPUnit_Framework_TestCase {
  /**
   * @var TDW\UserApi\Entity\Group
   */
  protected $group;

  const GROUP_NAME = 'testGroup ñ¿?Ñ';
  const GROUP_DESCRIPTION = 'testGroup ñ¿?Ñ - Description';

  /**
   * Sets up the fixture.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->group = new Group(self::GROUP_NAME, self::GROUP_DESCRIPTION);
  }

  /**
   * Tears down the fixture.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
  }

  /**
   * Implement testConstructor
   * 
   * @covers TDW\UserApi\Entity\Group::__construct
   * @covers TDW\UserApi\Entity\Group::getId
   * @covers TDW\UserApi\Entity\Group::setGroupname
   * @covers TDW\UserApi\Entity\Group::setDescription
   */
  public function testConstructor() {
    $group = new Group('testGroup');
    $this->assertEmpty($group->getId());
    $group->setGroupname(self::GROUP_NAME);
    $this->assertSame(self::GROUP_NAME, $group->getGroupname());
    $this->assertNull($group->getDescription());
  }

  /**
   * Implement testGetId().
   * 
   * @covers TDW\UserApi\Entity\Group::getId
   */
  public function testGetId() {
    $this->assertEmpty($this->group->getId());
  }

  /**
   * Implement testGroupname().
   * 
   * @covers TDW\UserApi\Entity\Group::setGroupname
   * @covers TDW\UserApi\Entity\Group::getGroupname
   */
  public function testGroupname() {
    $this->assertEquals(self::GROUP_NAME, $this->group->getGroupname());
    $this->group->setGroupname('$%&¿?');
    $this->assertEquals('$%&¿?', $this->group->getGroupname());
  }

  /**
   * Implement testDescription().
   * 
   * @covers TDW\UserApi\Entity\Group::setDescription
   * @covers TDW\UserApi\Entity\Group::getDescription
   */
  public function testDescription() {
    $this->assertSame(self::GROUP_DESCRIPTION, $this->group->getDescription());
    $this->group->setDescription('$%&¿?');
    $this->assertSame('$%&¿?', $this->group->getDescription());
  }

  /**
   * Implement testToString().
   * 
   * @covers TDW\UserApi\Entity\Group::__toString
   */
  public function testToString() {
    $this->assertSame(self::GROUP_NAME, $this->group->__toString());
  }

  /**
   * Implement testJsonSerialize().
   * 
   * @covers TDW\UserApi\Entity\Group::jsonSerialize
   */
  public function testJsonSerialize() {
    $json = $this->group->jsonSerialize();
    $this->assertJson(json_encode($json));
    $this->assertArrayHasKey('id', $json);
    $this->assertArrayHasKey('groupname', $json);
    $this->assertArrayHasKey('description', $json);
  }

  /**
   * Implement testSerialize().
   * 
   * @covers TDW\UserApi\Entity\Group::serialize
   * @covers TDW\UserApi\Entity\Group::unserialize
   */
  public function testSerialize() {
    $this->group->unserialize($this->group->serialize());
    $this->assertSame(self::GROUP_NAME, $this->group->getGroupname());
    $this->assertSame(self::GROUP_DESCRIPTION, $this->group->getDescription());
  }
}
